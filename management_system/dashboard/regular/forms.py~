# -*- coding: utf-8 -*-

from django.core.exceptions import ValidationError
from django.forms import ModelForm, RegexField
from dashboard.regular.models import RegularUser
from django.core.exceptions import ValidationError 

class RegularUserForm(ModelForm):
	parent_1_phone = RegexField(regex = r'^\+?1?\d{9,15}$', label = "Телефон отца",
	                       		error_message = ("Телефонный номер должен иметь формат +99999999999. Может содержать до 15 цифр"))
	parent_2_phone = RegexField(regex = r'^\+?1?\d{9,15}$', label = "Телефон матери",
	                       		error_message = ("Телефонный номер должен иметь формат +99999999999. Может содержать до 15 цифр"))

	def clean(self):
		cd = super(RegularUserForm, self).clean()
		if not((cd['parent_1'] and cd['parent_1_phone']) or 
			   (cd['parent_2'] and cd['parent_2_phone'])):
			   raise ValidationError('Информация о хотя бы одном родителе должна быть заполнена', code = 'invalid' )
		else: return cd
	
	class Meta:
		model = RegularUser
<<<<<<< HEAD
		exclude = ['user','data', 'modified', 'is_active']
=======
		exclude = ['data', 'modified', 'is_active']
>>>>>>> 0a8784f2da2033b898153cee6189f6b04b5a7f6d
